"""
Django settings for project_agrosavvy project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from datetime import timedelta

MAPBOX_API_KEY = config('MAPBOX_API_KEY')
ONECALL_API_KEY=config('ONECALL_API_KEY')
OPENAI_API_KEY=config('OPENAI_API_KEY')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    # admin UI
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_agrosavvy',
    # log
    'easyaudit',
    # forgot password templates
    'widget_tweaks',
    # automatic data import from csv
    'data_wizard',
    'data_wizard.sources',
    # automated ban on failedlogins
    'axes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # log
    'easyaudit.middleware.easyaudit.EasyAuditMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # redirection when banned due to failed login attemps
    'axes.middleware.AxesMiddleware',
    # custom middleware for blocking ips
    'app_agrosavvy.middleware.block_ips.BlockBannedIPsMiddleware',


]

ROOT_URLCONF = 'project_agrosavvy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # MINE - for template routing
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_agrosavvy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'agrosavvydb',
        'USER': 'postgres',
        'PASSWORD': 'NASA',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# MINE
MEDIA_URL = '/media/'

# MINE -- FOR STATIC FILES - CSS AND IMAGES
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# MEDIA_ROOT = BASE_DIR / 'static/images'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'app_agrosavvy.CustomUser'




AUTHENTICATION_BACKENDS = [
    # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    'axes.backends.AxesStandaloneBackend',

    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]


# superadmin UI
JAZZMIN_SETTINGS = {
    "site_title": "Agrosavvy Admin",  # The title in the browser tab
    "site_header": "Agrosavvy Admin",  # The title in the admin page header
    "site_brand": "Agrosavvy Admin",
    "welcome_sign": "Welcome to Agrosavvy Admin Panel",
    "site_logo": "/images/Logo_Agrosavvy.png",
    "site_logo_classes": "img-circle",
}

# email configurations
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL')

# Password reset URL configuration
PASSWORD_RESET_TIMEOUT_DAYS = 1

LOGIN_URL = 'my_login'


# number of rows superadmin can select in one go - django admin site
# DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000 





# axes configurations - use cache redis for optimization
# once a user succesfully logged in, the data access attempts will clear.
# just view the data on easyaudit, the blocking works.


# bugs: 
# the access failures, don't work
# the django admin can still be locked_out


# fetch IP addresses from a HTTP header such as X-Forwarded-For. (for render compatibility)
AXES_IPWARE_META_PRECEDENCE_ORDER = [
    'HTTP_X_FORWARDED_FOR',
    'REMOTE_ADDR',
]

AXES_USE_CACHE = False
AXES_HANDLER = 'axes.handlers.database.AxesDatabaseHandler'
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = timedelta(minutes=30)  
AXES_LOCKOUT_TEMPLATE = 'error_pages/locked_out.html'
AXES_IGNORE_PERM_PATHS = [ r'^/agroADMINsavvyCGLR/?',]



# Session settings  - recheck this for compatibility
# SESSION_COOKIE_AGE = 1800  
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True 
# SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to session cookie
# SESSION_COOKIE_SECURE = True  # Ensure cookies are sent over HTTPS
# SESSION_SAVE_EVERY_REQUEST = True  # Save session data on every request



# django security deployment checklist

# # HTTPS settings
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
# SECURE_SSL_REDIRECT = True

# # HSTS settings
# SECURE_HSTS_SECONDS = 31536000  # 1 year
# SECURE_HSTS_PRELOAD = True
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True

