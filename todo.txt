    june 6
    basic setup django

    june 7
    crud field and map feature

    june 8
    add ID in field
    follow naming conventions in erd
    recheck model
    migrate new models
    integrate it into the contribute template, views

    june 9
    add update fields functionality
    push to github


    june 10
    organized templates structures (auth_pages, app_agrosavvy(main pages), bofa_pages (brgy officers and farmers))
    created separate templates pages for bo and farmers
    created separate template for add, update field for bofa
    created bofa_base and bofa_sidebar
    added if request.user.is_user type in every page except bofa. access bofa also for guests
    added restrictions in accessing in views
        use @login_required or if user.is_authenticated and RBAC
    add get started - go to dashboard without loggin in
    checked inputs if na assign ba jud sa owner
    checked redirection after adding fields for bofa, redirect to bofa_url


    june 12
    use separate registration pages for each user type

    june 14
    Integrate basic weather api

    june 15
    improve map model to outdoors-v11

    june 22
    fixed models - database schema (address and soil data. separate the forms and table).
    fixed the address. auto complete when "show on map" button is clicked.
    added limit to cebu city, Philippines only
    fixed add fields based on address and soil data configs
    fixed update field
    bofa add and update based on new configs
    in da admin dashboard, show who the owner is
    fixed delete field in bofa
    add user type in dashboard


    june 23
    fixed error in map views and templates
    fixed subdomains and integrated sub url routing
    basic frontend code for settings

    june 26
    update username, email, firstname and lastname feature (profile management)
    integrated django messages

    june 27
    added urls for change password, user profile sections
    created separate folder for settings section (password management, etc)
    built change password 
    bofa profile and password management 

    DONE !!!!! 




    
   routing for settings
    add pictures in models, active status, is approved
        profile
        change password
        security
        billing - subscription
        connected apps

        for profile management let bofa access the views and templates,
        create new folder template for it.




    tip: just implement fetch api later on. Implement server side rendering for now ! 
            (does not apply to maps, recommendations, addresses, anything that needs client rendering).


    POLISH
        secure API keys
        add validation errors and messages errors (use django messages for alerts) -fix messages, does not render correctly

        

    bugs:
        when user login and credential does not exist, no parameters or guidance found that users does not exist
        no checks if username and other credentials already exists